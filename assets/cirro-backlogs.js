eval("//# sourceURL=assets/ember-cli/loader.js");

;eval("define(\"cirro-backlogs/app\", \n  [\"ember\",\"ember/resolver\",\"ember/load-initializers\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Resolver = __dependency2__[\"default\"];\n    var loadInitializers = __dependency3__[\"default\"];\n\n    Ember.MODEL_FACTORY_INJECTIONS = true;\n\n    var App = Ember.Application.extend({\n      modulePrefix: \'cirro-backlogs\', // TODO: loaded via config\n      Resolver: Resolver,\n    });\n\n    // Adds a dasherized version of the route name as a class on the body tag\n    Ember.Route.reopen({\n      activate: function() {\n        var cssClass = this.toCssClass();\n        if (cssClass !== \'application\') {\n          Ember.$(\'body\').addClass(cssClass);\n        }\n      },\n      deactivate: function() {\n        Ember.$(\'body\').removeClass(this.toCssClass());\n      },\n      toCssClass: function() {\n        return this.routeName.replace(/\\./g, \'-\').dasherize();\n      }\n    });\n\n    loadInitializers(App, \'cirro-backlogs\');\n\n    __exports__[\"default\"] = App;\n  });//# sourceURL=cirro-backlogs/app.js");

;eval("define(\"cirro-backlogs/config/environment\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = {\"environment\":\"development\",\"baseURL\":\"/\",\"locationType\":\"auto\",\"EmberENV\":{\"FEATURES\":{}},\"APP\":{\"LOG_ACTIVE_GENERATION\":true,\"LOG_VIEW_LOOKUPS\":true}};\n  });//# sourceURL=cirro-backlogs/config/environment.js");

;eval("define(\"cirro-backlogs/router\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    var Router = Ember.Router.extend({\n      location: CirroBacklogsENV.locationType\n    });\n\n    Router.map(function() {\n    	// this.route(\'application\');\n    	this.route(\'info\');\n    	this.route(\'420\');\n\n    	this.resource(\'project\', function() {\n    		this.route(\'dotfolio\');\n    		this.route(\'shopify-theme\');\n    		this.route(\'dyna-reem\');\n    	});\n\n    	this.resource(\'client\', function() {\n    		this.route(\'dynia\');\n    		this.route(\'for-love-and-lemons\');\n    		this.route(\'gates-family-foundation\');\n    		this.route(\'play-plus-record\');\n    		this.route(\'34-degrees\');\n    		this.route(\'laura-krudener\');\n    		this.route(\'shiftcloud\');\n    	});\n    });\n\n    __exports__[\"default\"] = Router;\n  });//# sourceURL=cirro-backlogs/router.js");

;eval("define(\"cirro-backlogs/routes/application\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Route.extend({\n    	actions: {\n    		swapColor: function() {\n    			var $body = Ember.$(\'body\');\n    			$body.toggleClass(\'dark\');\n    		}\n    	}\n    });\n  });//# sourceURL=cirro-backlogs/routes/application.js");

;eval("define(\"cirro-backlogs/templates/420\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(\"<div class=\\\"container sm cirro-list\\\">\\n	<h1>\");\n      data.buffer.push(escapeExpression((helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data},helper ? helper.call(depth0, \"34°\", \"client.34-degrees\", options) : helperMissing.call(depth0, \"link-to\", \"34°\", \"client.34-degrees\", options))));\n      data.buffer.push(\"</h1>\\n	<h1>\");\n      data.buffer.push(escapeExpression((helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data},helper ? helper.call(depth0, \"dotFolio\", \"project.dotfolio\", options) : helperMissing.call(depth0, \"link-to\", \"dotFolio\", \"project.dotfolio\", options))));\n      data.buffer.push(\"</h1>\\n	<h1>\");\n      data.buffer.push(escapeExpression((helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data},helper ? helper.call(depth0, \"Dynia\", \"client.dynia\", options) : helperMissing.call(depth0, \"link-to\", \"Dynia\", \"client.dynia\", options))));\n      data.buffer.push(\"</h1>\\n	<h1>\");\n      data.buffer.push(escapeExpression((helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data},helper ? helper.call(depth0, \"Gates Family Foundation\", \"client.gates-family-foundation\", options) : helperMissing.call(depth0, \"link-to\", \"Gates Family Foundation\", \"client.gates-family-foundation\", options))));\n      data.buffer.push(\"</h1>\\n	<h1>\");\n      data.buffer.push(escapeExpression((helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data},helper ? helper.call(depth0, \"For Love & Lemons\", \"client.for-love-and-lemons\", options) : helperMissing.call(depth0, \"link-to\", \"For Love & Lemons\", \"client.for-love-and-lemons\", options))));\n      data.buffer.push(\"</h1>\\n	<h1>\");\n      data.buffer.push(escapeExpression((helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data},helper ? helper.call(depth0, \"Laura Krudener\", \"client.laura-krudener\", options) : helperMissing.call(depth0, \"link-to\", \"Laura Krudener\", \"client.laura-krudener\", options))));\n      data.buffer.push(\"</h1>\\n	<h1>\");\n      data.buffer.push(escapeExpression((helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data},helper ? helper.call(depth0, \"Dyna + Reem\", \"project.dyna-reem\", options) : helperMissing.call(depth0, \"link-to\", \"Dyna + Reem\", \"project.dyna-reem\", options))));\n      data.buffer.push(\"</h1>\\n	<h1>\");\n      data.buffer.push(escapeExpression((helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data},helper ? helper.call(depth0, \"Play + Record\", \"client.play-plus-record\", options) : helperMissing.call(depth0, \"link-to\", \"Play + Record\", \"client.play-plus-record\", options))));\n      data.buffer.push(\"</h1>\\n	<h1>\");\n      data.buffer.push(escapeExpression((helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data},helper ? helper.call(depth0, \"Cirro Shopify Theme\", \"project.shopify-theme\", options) : helperMissing.call(depth0, \"link-to\", \"Cirro Shopify Theme\", \"project.shopify-theme\", options))));\n      data.buffer.push(\"</h1>\\n	<h1>\");\n      data.buffer.push(escapeExpression((helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data},helper ? helper.call(depth0, \"ShiftCloud\", \"client.shiftcloud\", options) : helperMissing.call(depth0, \"link-to\", \"ShiftCloud\", \"client.shiftcloud\", options))));\n      data.buffer.push(\"</h1>\\n</div>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=cirro-backlogs/templates/420.js");

;eval("define(\"cirro-backlogs/templates/application\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(\"<div class=\\\"border top\\\"></div>\\n<div class=\\\"border right\\\"></div>\\n<div class=\\\"border bottom\\\"></div>\\n<div class=\\\"border left\\\"></div>\\n\\n<nav>\\n	<div class=\\\"nav-wrap left\\\">\\n		<h4><a href=\\\"http://wearecirro.com\\\" target=\\\"_blank\\\">Cirro ⤴</a></h4>\\n	</div>\\n	<div class=\\\"nav-wrap right\\\">\\n		<h4>\");\n      data.buffer.push(escapeExpression((helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data},helper ? helper.call(depth0, \"Info\", \"info\", options) : helperMissing.call(depth0, \"link-to\", \"Info\", \"info\", options))));\n      data.buffer.push(\"</h4>\\n		<h4><a href=\\\"mailto:hello@wearecirro.com\\\">Email Us</a></h4>\\n		<h4><a role=\\\"button\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"swapColor\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">☼</a></h4>\\n	</div>\\n</nav>\\n\\n\");\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=cirro-backlogs/templates/application.js");

;eval("define(\"cirro-backlogs/templates/client\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1;\n\n\n      data.buffer.push(\"<header class=\\\"sm\\\">\\n	<h1>Backlog</h1>\\n	<p>Below you will find the list of prioritized features we have discussed. We will set goals for each month and mark completed features in yellow.</p>\\n	<p>Please contact us with any questions or updates at <a href=\\\"mailto:hello@wearecirro.com\\\">hello@wearecirro.com.</a></p>\\n</header>\\n\\n\");\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      return buffer;\n      \n    });\n  });//# sourceURL=cirro-backlogs/templates/client.js");

;eval("define(\"cirro-backlogs/templates/client/34-degrees\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      \n\n\n      data.buffer.push(\"<div class=\\\"container sm\\\">\\n	<section>\\n		<h2>Overview</h2>\\n		<p class=\\\"red\\\">The next scheduled work day is on September 17th</p>\\n		<a href=\\\"http://34degrees.com/\\\" target=\\\"_blank\\\">Production Site</a>\\n		<a href=\\\"http://34degrees-staging.gopagoda.com/\\\" target=\\\"_blank\\\">Staging Site</a>\\n	</section>\\n	<section>\\n		<h2>34° Feature List</h2>\\n		<ul>\\n			<li>Recipes Page</li>\\n			<ul>\\n				<li><mark>Pre-Launch - - - Romance copy can be edited on your dashboard. Click on the \\\"Edit Recipe Page\\\" link under \\\"EDIT PRIMARY PAGES\\\". The  romance copy lives here.</mark></li>\\n				<li><mark>Pre-Launch - - - Adjust bullet formatting in CMS so it does not create a span style with wrong fonts. \\\"I cannot reproduce this, but I did add this onto the redactor: 	deniedTags: [\'span\'] so span tags shouldn\'t get into that markup now\\\"</mark></li>\\n				<li><mark>Pre-Launch - - - Recipe titles don\'t show in full (cuts off if it\'s 2 lines). Please increase area to accommodate 2 lines.</mark></li>\\n				<li><mark>Pre-Launch - - - Recipe card image in pop­up doesn\'t show.</li>\\n				<li><mark>Pre-Launch - - - Remove dash in the cracker identifier (i.e.: Natural­crisps should be Natural Crisps)</mark></li>\\n				<li><mark>Pre-Launch - - - Reorder categories to be Natural • Sesame • Cracked Pepper • Rosemary • Whole Grain \\\"The categories are dependent on the order of the products. You can change this order by going to Reorder Product under the Reorder Items section of your dashboard.\\\"</mark></li>\\n				<li><mark>Pre-Launch - - - Each Nav item should also have \\\"Crisps\\\" at the end of it</mark></li>\\n				<li><mark>Pre-Launch - - - Remove Download All</mark></li>\\n				<li><mark>Pre-Launch - - - Add \\\"Servings\\\" to the front of that line item?</mark></li>\\n				<li><mark>Pre-Launch - - - Add the word \\\"crisps\\\" To recipe category navigation</mark></li>\\n				<li>Pre-Launch - - -  Name of crisps title case. (\\\"Whole Grain Crisps\\\" not \\\"Whole grain crisps\\\").</li>\\n				<li>Pre-Launch - - - Typo in footer of recipe modal. \\\"Keep your crisps crisp–– store in an airtight container after opening.\\\"</li>\\n			</ul>\\n			<li>Homepage</li>\\n			<ul>\\n				<li>Pre-Launch - - - Create new Facebook display feed.</li>\\n				<li>Pre-Launch - - - Remove Testimonials and put Pinterest feed.</li>\\n				<li>Pre-Launch - - - We will be updating some of this copy. Will need help accessing certain areas.</li>\\n			</ul>\\n			<li>Product page</li>\\n			<ul>\\n				<li><mark>Reorder packages to be Natural • Sesame • Cracked Pepper • Rosemary • Whole GrainThey seem to be in this order all ready. </mark>I may need clarification on where this is being seen.</li>\\n				<li>Individual Product Pages</li>\\n				<li>We will need to have a popup for NLEAS here. See attached mockup.</li>\\n				<li>Can we either shrink the image or enlarge the copy so it balances more? See attached mockup.</li>\\n				<li>Can we also add a slideshow feature to the product image, so we can show different box views?</li>\\n				<li><mark>See Recipes link does not work properly</mark></li>\\n			</ul>\\n			<li>Company Page</li>\\n			<ul>\\n				<li><mark>Pre-Launch - - - Bios are done ­ but they are not showing.</mark></li>\\n				<li>Pre-Launch - - - Increase width of bio modal and make scrollable.</li>\\n				<li>Pre-Launch - - - Crop and resize bio images on upload so they stack better within the grid.</li>\\n				<li>Pre-Launch - - - Add staging and final url to Typekit so fonts load.</li>\\n			</ul>\\n			<li>Community, FAQ, News, Trade</li>\\n			<ul>\\n				<li><mark>Pre-Launch - - - Hide all for now.</mark></li>\\n			</ul>\\n			<li>Buy</li>\\n			<ul>\\n				<li><mark>Pre-Launch - - -  We will be adding logos here. We need access to be able to do this.</mark></li>\\n			</ul>\\n			<li>Headers</li>\\n			<ul>\\n				<li>Make app page headers editable.</li>\\n			</ul>\\n			<li>Contact Page</li>\\n			<ul>\\n				<li>Pre-Launch - - - Newsletter signup errors on that page.</li>\\n				<li>Pre-Launch - - - Setup email form to goto 34° account.</li>\\n			</ul>\\n		</ul>\\n	</section>\\n</div>\\n\");\n      \n    });\n  });//# sourceURL=cirro-backlogs/templates/client/34-degrees.js");

;eval("define(\"cirro-backlogs/templates/client/dynia\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      \n\n\n      data.buffer.push(\"<div class=\\\"container sm\\\">\\n	<section>\\n		<h2>Overview</h2>\\n		<p class=\\\"red\\\">The next scheduled work day is on September 28th</p>\\n		<a href=\\\"http://www.dynia.com/\\\" target=\\\"_blank\\\">http://www.dynia.com/</a>\\n	</section>\\n	<section>\\n		<h2>Dynia Feature List</h2>\\n		<ul>\\n			<li>Add updated logo.</li>\\n			<li>Remove interaction with menu while in project view to resolve residential column bug.</li>\\n			<li>Bios for the staff on the contact page.</li>\\n			<li>If no awards are listed, remove slide from project.</li>\\n			<li>Add thumbnails on the project slider.</li>\\n			<li>Re-think the mobile experience for how users interact with projects.</li>\\n		</ul>\\n	</section>\\n</div>\\n\");\n      \n    });\n  });//# sourceURL=cirro-backlogs/templates/client/dynia.js");

;eval("define(\"cirro-backlogs/templates/client/for-love-and-lemons\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      \n\n\n      data.buffer.push(\"<div class=\\\"container sm\\\">\\n	<section>\\n		<h2>Overview</h2>\\n		<p class=\\\"red\\\">The next scheduled work day is November 10th.</p>\\n		<a href=\\\"http://www.forloveandlemons.com/\\\" target=\\\"_blank\\\">http://www.forloveandlemons.com/</a>\\n	</section>\\n	<section>\\n		<h2>For Love & Lemons Feature List</h2>\\n		<ul>\\n			<li>Blog Redesign</li>\\n				<ul>\\n					<li>Blog preview with a [Read more] button similar to Nasty Gal Blog.</li>\\n					<li>Cleaner archive list. Sort by month and year with dropdown of posts.</li>\\n					<li>Ability to add text and images from within the textbox (WYSIWYG).</li>\\n				</ul>\\n			<li>Update homepage design to be less \\\"bloggy\\\" and more high fashion. I really like <a href=\\\"https://www.ssense.com/\\\">ssense.com</a>. Michelle, can you provide more inspirations?</li>\\n			<li>Update about page with better photography and possibly a new layout.</li>\\n			<li><strong>Shop</strong> — search box so customers can find products faster.</li>\\n			<li>Optimize press page to load faster. We need to implement a lazy load of image assets.</li>\\n			<li><strong>Shop</strong> — Add user accounts to Shopify so customers can login and view previous orders and save credit cards.</li>\\n			<li><strong>Shop</strong> — Add the ability to purchase gift cards from the site.</li>\\n			<li>Style MailChimp template that matches site design.</li>\\n			<li><strong>Shop</strong> — HTML emails that are sent from Shopify.</li>\\n			<li><strong>Shop</strong> — Block countries from purchasing anything on site.</li>\\n			<li><strong>Shop</strong> — Implement fraud detection app to Shopify to help with chargebacks.</li>\\n			<li><strong>Shop</strong> — Integrate more in depth Google Analytics tracking.</li>\\n			<li><strong>Shop</strong> — Ability for users to create a wishlist.</li>\\n			<li>Site wide design re-fresh.</li>\\n			<li>Ability to sign up for email newsletter without verification.</li>\\n			<li><strong>Shop</strong> — Ability to add videos to products.</li>\\n		</ul>\\n	</section>\\n</div>\\n\");\n      \n    });\n  });//# sourceURL=cirro-backlogs/templates/client/for-love-and-lemons.js");

;eval("define(\"cirro-backlogs/templates/client/gates-family-foundation\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\';\n\n\n      data.buffer.push(\"<div class=\\\"container sm\\\">\\n	<section>\\n		<h2>Overview</h2>\\n		<p class=\\\"red\\\">The next scheduled work day is TBD.</p>\\n		<p>Items marked yellow are complete and items in purple will be completed in kind. Features are organized by priority with the highest priority itmes being closest to the top.</p>\\n		<a href=\\\"http://www.gatesfamilyfoundation.org/\\\" target=\\\"_blank\\\">http://www.gatesfamilyfoundation.org</a>\\n	</section>\\n	<section>\\n		<h2>Gates Family Foundation Feature List</h2>\\n		<ul>\\n			<li>Update Leeds seals in the header on the \\\"Hover Building\\\" page.</li>\\n			<li>For the Gates Frontiers Fund on Funds page, put the grants below the mission statements, but have the rest of the text below it. Should go mission statement, grants, additional content</li> \\n			<li>Implement cloud storage solution.\\n				<ul>\\n					<li>Setup Amazon Web Services S3 account.</li>\\n					<li>Setup folder structure for document uploads.</li>\\n					<li>Train Carol how to manage file uploads and embed them into the site.</li>\\n				</ul>\\n			</li>\\n			<li>Change sitewide wysiwyg to accept line breaks on any text copy and pasted from Word.</li>\\n			<li><mark> Expand data and visual structure for \\\"Land Protection in Focus Landscapes\\\" under Natural Resources. Expand data and visual structure for Initiatives Page in General (this will be similar to what needs to be done on the family fund section)\\n				<ul> \\n					<li><mark> \\n						 Each of the categories on this page will need some kind of subcategorization - content in these subcategories would be similar to what is on the activity page and layout would be similar to about page (where content can take up most of the page). </mark>\\n					</li> \\n					<li><mark> \\n						Subcategories specifically needed for for Education and Natural resources there is more content including : images, charts, graphs, additional text.\\n						</mark>\\n					</li>\\n					<li><mark>  \\n						Problem with wysiwyg. Can\'t copy from it, can\'t add in spaces without going into the source </mark></li>\\n					<li><mark>  \\n						Link to these additional resources under the Natural Resources title tab\\n						</mark>\\n					</li>\\n					<li><mark>  \\n						Resources will link to a separate page where content will take\\n						</mark> \\n					</mark></li> \\n				</ul> \\n			</li>\\n			<li><mark>Add Leeds and Landmark seals in the header on the \\\"Hover Building\\\" page. Does not need to be editable.</mark></li>\\n			<li><mark> Identify a Cloud Storage Option. Note: add a content type with file uploads. </mark></li>\\n			<li><mark class=\\\"kind\\\">Re-ordering activity items is not working.</mark></li>\\n			<li><mark class=\\\"kind\\\">Fix spacing in headers. Spacing is too much and needs to be reduced consistently throughout</mark></li>\\n			<li> <mark>The text is getting cut off on the Highlights of GFF Activity page: Beth gave a screenshot of this on her environment </mark></li> \\n			<li><mark>  Update the education document. </mark></li>\\n			<li><mark>  News and activities don\'t have image description. Need alt tag on those images. </mark></li>\\n			<li><mark> The text is getting cut off on the Highlights of GFF Activity page: Beth gave a screenshot of this on her environment </li> \\n			</ul>\\n		</section>\\n		<section class=\\\"backlog\\\">\\n			<h2> Backlog </h2> \\n			<ul> \\n			<li>Online Grant Application.</li>\\n			\\n			<li>Incorporate larger imagery withing informational sections.</li>\\n			<li>Make header affixed to top of page and add animation when scrolling.</li>\\n			<li>Graphical representation of Family Funds data.</li>\\n			<li>Graphical representation of grant data.</li>	\\n		</ul>\\n	</section>\\n</div>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=cirro-backlogs/templates/client/gates-family-foundation.js");

;eval("define(\"cirro-backlogs/templates/client/laura-krudener\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      \n\n\n      data.buffer.push(\"<div class=\\\"container sm\\\">\\n	<section>\\n		<h2>Overview</h2>\\n		<p class=\\\"red\\\">The next scheduled work day is on Monday, September 29th.</p>\\n		<a href=\\\"http://laurakrudener.com\\\" target=\\\"_blank\\\">http://laurakrudener.com</a>\\n	</section>\\n	<section>\\n		<h2>Laura Krudener Feature List</h2>\\n		<ul>\\n			<li>Ability to add a thumbnail for each artwork that will appear on the homepage.</li>\\n			<li>Homepage images that fill the width of the screen.</li>\\n			<li>Update the teal on the site to #32f9f3.</li>\\n			<li>Move site blog to tumblr and setup necessary re-directs.</li>\\n			<li>Theme tumblr page to match site.</li>\\n			<li>Add necessary social media like buttons to Tumblr theme.</li>\\n			<li>Feed social media into blog.</li>\\n			<li>Test mobile posting to blog.</li>\\n			<li>Update font wide typeography scale to more readable across all devices.</li>\\n			<li>Fixed header across top of page.</li>\\n		</ul>\\n	</section>\\n</div>\\n\");\n      \n    });\n  });//# sourceURL=cirro-backlogs/templates/client/laura-krudener.js");

;eval("define(\"cirro-backlogs/templates/client/play-plus-record\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      \n\n\n      data.buffer.push(\"<div class=\\\"container sm\\\">\\n	<section>\\n		<h2>Overview</h2>\\n		<p class=\\\"red\\\">The next scheduled work day is TBD</p>\\n		<a href=\\\"http://www.playplusrecord.com/\\\" target=\\\"_blank\\\">http://www.playplusrecord.com/</a>\\n	</section>\\n	<section>\\n		<h2>Play + Record Feature List</h2>\\n		<ul>\\n			<li>User profiles and authentication</li>\\n			<li>Stripe payment integration</li>\\n			<li>Data structures</li>\\n			<li>Email notification system</li>\\n			<li>Homepage with video</li>\\n			<li>Tracks page with sorting</li>\\n			<li>Amazon S3 cloud storage</li>\\n			<li>Amazon S3 music streaming</li>\\n			<li>Custom website audio player</li>\\n			<li>Tracks page hover or click to play track</li>\\n			<li>A base testing suite for API and front-end</li>\\n			<li>Amazon S3 conversion tool</li>\\n			<li>Sharable playlists</li>\\n		</ul>\\n	</section>\\n</div>\\n\");\n      \n    });\n  });//# sourceURL=cirro-backlogs/templates/client/play-plus-record.js");

;eval("define(\"cirro-backlogs/templates/client/shiftcloud\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      \n\n\n      data.buffer.push(\"<div class=\\\"container sm\\\">\\n  <section>\\n    <h2>Staging Site</h2>\\n    <p>\\n      <a href=\\\"http://shiftcloud-staging.herokuapp.com//\\\" target=\\\"_blank\\\">http://shiftcloud-staging.herokuapp.com//</a>\\n    </p>\\n    <h2> Documents </h2> \\n    <p> <a href=\\\"https://drive.google.com/a/cirrously.com/folderview?id=0B4VpIotHRxG2UHpjaXhfaTJ1Q2s&usp=sharing\\\" target=\\\"_blank\\\">Shared Docs in Drive </a>\\n    </p>\\n  </section>\\n  <section>\\n    <h2>ShiftCloud Feature List</h2>\\n    <ul>\\n      <li>Design & Base Styling</li>\\n      <ul>\\n        <li><mark>Color palettes and fonts selected for the site</mark></li>\\n        <li><mark>Form elemenst such as inputs, select lists, check boxes, radio buttons, text areas and buttons</mark></li>\\n        <li><mark>Large reusable structures such as navigation, page headers footers, image grids, text headers, lists</mark></li>\\n        <li><mark>Components such as modals, drop downs, accordions, specifically used for the design of the site</mark></li>\\n        <li><mark>The mockup for the main scheduler component</mark></li>\\n      </ul>\\n      <li>Data Modeling and Architecture</li>\\n      <ul>\\n        <li><mark>Data models needed for the initial build of ShiftCloud</mark></li>\\n        <li><mark>The fields needed for those data models</mark></li>\\n        <li><mark>Lines connecting models together that also convey the type of relationship between the models suck as \\\"has many\\\" or \\\"belongs to\\\"</mark></li>\\n      </ul>\\n      <li>Authentication and Role Management</li>\\n      <ul>\\n        <li><mark>A general user login page</mark></li>\\n        <li><mark>Logging in propmpts redirect to schedule of current week</mark></li>\\n        <li><mark>Users will have a profile page where their contact information will live. Users will also be able to see their upcoming shifts listed on this page for a quick reference, and they will be able to see how many hours they are scheduled for.</mark></li>\\n        <li><mark>Role-based authentication will allow scheduler -> scheduled hierarchy.</mark></li>\\n        <li><mark>Schedulers will has both editing and scheduling power over regular users.</mark></li>\\n      </ul>\\n      <li>User Notification System</li>\\n      <ul>\\n        <li><mark>Mandrill SMTP Server Configuration</mark></li>\\n         <li><mark>Email notifications for new account that will contain a link to a one-time login where the user can set their password. After the password is set, their account will be active</mark></li>\\n         <li> <mark>Schedulers will be able to access a user overview page where they will be able to see who has been invited to the site and who has accepted the invitations.</mark> </li>\\n         <li><mark>Scheduling actions will fire notification hooks that inform the appropriate users of said action. <mark></li>\\n      </ul>\\n      <li> Scheduling Tool </li>\\n      <ul>\\n        <li><mark>The view where schedulers can create a preset for any particular day they choose </mark></li>\\n        <li><mark>The view where schedulers can schedule employees for shifts within a preset for a day</marK></li>\\n        <li><mark>The view where employees can view the schedule</marK></li>\\n        <li><mark>The view where employees can request coverage for a shift they are scheduled for</mark> </li>\\n        <li><mark> The view where employees can accept a request for coverage by a fellow employee </mark></li>\\n        <li><mark> Automatic emails that get sent to all of the appropriate employees when a request for coverage is made by a separate employee </mark></li>\\n        <li> <mark>Automatic emails that get sent to the scheduler when an employee has accepted a request for coverage and the scheduler needs to approve the shift switch </mark></li>\\n      </ul>\\n    </ul>\\n  </section>\\n  <section id=\\\"backlog\\\" class=\\\"disabled-list\\\">\\n    <h2>Backlog</h2>\\n    <ul>\\n      <li> <mark>  Employees should have a dot appear for their shifts. Or maybe have them be a different color. </mark></li>\\n      <li> AM/PM button to minimize scrolling (Next day options would only be needed on the end time drop down)</li> \\n      <li> Ability to duplicate a shift </li> \\n      <li> Input time typeahead </li>    \\n      <li> Build validation to prevent an employee covering for another employeeif they are both working the same shifts </li>\\n      <li> Have the employee be able to have accounts on unaffiliated restaurants </li>\\n      <li> Styling for the phone </li> \\n      <li> Overtime warning: You\'ve scheduled your employee for xx amount of hours they are about to go into overtime. If you pass 10 hours double the hourly wage </li> \\n      <li> A table showing the whole weeks schedule as a scheduler </li>\\n      <li> How many changes have been made to a schedule, how many requests have been made by an employee for cover, how many coverages have they gotten. To export this data as a CSV </li> \\n      <li> See the difference between scheduled time and the time that was actually worked by the employee </li> \\n      \\n    </ul>\\n  </section>\\n</div>\\n\");\n      \n    });\n  });//# sourceURL=cirro-backlogs/templates/client/shiftcloud.js");

;eval("define(\"cirro-backlogs/templates/info\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      \n\n\n      data.buffer.push(\"<header>\\n	<h1 class=\\\"text-center\\\">Info</h1>\\n</header>\\n\\n<div class=\\\"container\\\">\\n	<h2>The Problem</h2>\\n	<p>Your website’s been up and running steadily—but your steady web presence isn’t keeping up with the newest Internet practices or accurately reflecting your growing and changing business.</p>\\n\\n	<br>\\n\\n	<h2>Our Philosophy</h2>\\n	<p>The cornerstone of our development process is to build on and to reflect the newest and best technologies and practices of the web. Our finger is not only on the pulse of the Internet’s future practices and applications—making us a valuable resource for clients looking to stay current on the web.</p>\\n\\n	<br>\\n\\n	<h2>The Solution</h2> \\n	<p>Our Ongoing Development Agreements are a way for you to continue to collaborate with us to achieve a steady and consistent evolution of your website—ensuring your website is getting the attention it needs and deserves.</p>\\n\\n\\n	<br>\\n\\n	<h2>How it Works</h2> \\n	<p>Each month we’ll act as your personal web consultants, collaborating with you to create a list (or backlog) of features, updates, and/or changes to improve your site. Then, we will develop—for a fixed amount of time each month—against this backlog that has been prioritized by you.</p>\\n\\n	<br>\\n\\n	<h2>The Process</h2>\\n	<p>It starts with a phone call. Each month will do a monthly kickoff to review and build upon your backlog, help your prioritize your list, and determine your monthly goals. Then we’ll propose the developer days you’ll need for the month to achieve those goals, and you’ll buy the developer days you want.</p>\\n	<p>During development, we will continue to check in with you to let you know about the progress of our work and to show you the new features and changes as they are completed.</p>\\n	<p>After we have completed the work for the month, we will again contact you to schedule a time for the following month’s kickoff meeting.</p>\\n\\n	<br>\\n\\n	<h2>The Pricing</h2>\\n	<p>Our Ongoing Development Agreements start at one developer day but you can buy up to one week depending on your monthly goals and feature timelines.</p>\\n\\n\\n	<div class=\\\"clearfix\\\">\\n		<div class=\\\"price-block\\\">\\n			<div class=\\\"price-inner\\\">\\n				<div class=\\\"price\\\">\\n					<p>1 Day</p>\\n					<h1>$750</h1>  \\n				</div>\\n				<div class=\\\"price-info\\\">\\n					In this amount of time, we can accomplish a handful of small changes or a medium sized feature such as building an image slider.\\n				</div>\\n			</div>\\n		</div>\\n\\n		<div class=\\\"price-block\\\">\\n			<div class=\\\"price-inner\\\">\\n				<div class=\\\"price\\\">\\n					<p>2 Days<p>\\n					<h1>$1400</h1>  \\n				</div>\\n				<div class=\\\"price-info\\\">\\n					In this amount of time we can accomplish 2 medium sized features such as adding a new page to the site or building a page that has dynamic and managed content.\\n				</div>\\n			</div>\\n		</div>\\n\\n		<div class=\\\"price-block\\\">\\n			<div class=\\\"price-inner\\\">\\n				<div class=\\\"price\\\">\\n					<p>3 Days<p>\\n					<h1>$2000</h1>  \\n				</div>\\n				<div class=\\\"price-info\\\">\\n					In this amount of time we can accomplish a larger feature such as a new page with dynamic content that can be managed by you that also has intricate display devices such as sliders, accordions, or tabs.\\n				</div>\\n			</div>\\n		</div>\\n\\n	</div>\\n\\n	<div class=\\\"other-block\\\">\\n		<div class=\\\"price-inner\\\">\\n			<div class=\\\"price\\\">\\n				<p>4+ Days</p>\\n				<h2>$600/day</h2>  \\n			</div>\\n			<div class=\\\"price-info\\\">\\n				Every additional day after 3 days will be billed at a discounted rate.\\n			</div>\\n		</div>\\n	</div>\\n\\n	<p>For features that may take longer than a week, it may be more appropriate for us to scope out that work and propose a timeline and price outside of the ongoing monthly agreement.  We can determine if this is needed during our monthly communication.</p>\\n\\n	<br>\\n\\n	<h2>The Benefit</h2> \\n	<p>Not only will you get professional and innovative consultation on how to achieve your web goals, but together we’ll generate a sustainable structure to ensure your web presence continues to evolve.</p>\\n	<p>We look forward to working more closely with you and collaborating together on ways to keep your web presence current and accurate of your evolving business. Please contact us if you have any questions on the pricing or process above, or to schedule a meeting to begin the creation of your backlog.</p>\\n</div>\");\n      \n    });\n  });//# sourceURL=cirro-backlogs/templates/info.js");

;eval("define(\"cirro-backlogs/templates/project/dotfolio\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      \n\n\n      data.buffer.push(\"<header>\\n	<h1 class=\\\"text-center\\\">dotFolio</h1>\\n</header>\\n\\n<div class=\\\"container\\\">\\n	<section>\\n		<h2>Overview</h2>\\n		<p>Below you will find a list of features translated from the client contract. Completed items are marked in <mark>yellow</mark> and in-kind features are marked in <mark class=\\\"kind\\\">purple</mark>. Below the feature list is the Backlog section where wish list items will be tracked. You can prioritize these features and choose to build them at additoinal cost.</p>\\n	</section>\\n	<section>\\n		<h2>Staging Site</h2>\\n		<p>\\n			<a href=\\\"http://artbox-staging.herokuapp.com/\\\" target=\\\"_blank\\\">http://artbox-staging.herokuapp.com/</a>\\n		</p>\\n	</section>\\n	<section>\\n		<h2>Feature List</h2>\\n		<ul>\\n			<li><h3>Planning and Foundation</h3></li>\\n			<ul>\\n				<li><mark>Base Styling - A style guide that includes color palette, fonts and form styling.</mark></li>\\n				<li><mark>Layout and UI design - Pages and interfaces of the site will be fully designed in Illustrator.</mark></li>\\n				<li><mark>Data Modeling - The various components of the application, such as Artists, Contacts, and Projects, will be designed and built. Their relationships to each other will also be fully articulated.</mark></li>\\n				<li><mark>Database Architecture - A database designed for extensibility and for managing large and varied data will be constructed.</mark></li>\\n				<li><mark>Comprehensive Testing Suite - A suite of tests will be created that will indicate at all times, throughout the life of the application, how healthy the application is, if there is a failure in functionality and where that failure can be found in the code.</mark></li>\\n			</ul>\\n			<li><h3>Artist Portal</h3></li>\\n			<ul>\\n				<li><mark>As part of signing up, Artists will be required to agree to the appropriate terms and conditions.</mark></li>\\n				<li><mark>A welcome page that introduces Artists to the portal and provides instructions on how to create an account and log in. </mark></li>\\n				<li><mark>An email confirmation that will notify artists of their new account, providing them a one-time link to log in and make their password.</mark></li>\\n				<li><mark class=\\\"kind\\\">The ability for artists to create a temporary profile that can be approved by NINEdotARTS managers, that will then open up their profile</mark></li>\\n				<li><mark>A profile edit page where artists can enter information pertinent to becoming consigned with Nine Dot.</mark></li>\\n				<li><mark>A profile view page where the artist can see how their profile is displayed to the Nine Dot admins.</mark></li>\\n				<li><mark>An upload tool where artists can drag and drop multiple images onto their profile to upload their artwork.</mark></li>\\n				<li><mark>Server processing of uploaded images to allow for maximum resolution while also minimizing the file size, so that images are quickly loaded when viewing them in the system.</mark></li>\\n				<li><mark>A view on the profile (or perhaps a separate profile page) that displays the artist’s uploaded artwork.</mark></li>\\n				<li><mark>The ability for Artists to tag artwork as going to be delivered to Nine Dot for consignment.</mark></li>\\n				<li><mark>The ability for Nine Dot to confirm the receipt of artwork from artists.</mark></li>\\n				<li><mark>The ability for Nine Dot admins to log into the portal and see all of the artists’ profiles and artworks.</mark></li>\\n				<li><mark>The ability for an admin to add notes to an artist’s profile to be displayed in chronological or reverse chronological order, which can be used to keep a log of recent communication between the artist and Nine Dot, or general status updates on the artist.</mark></li>\\n				<li><mark>The ability for admins to tag individual artists with descriptive words in order to categorize artists. </mark></li>\\n				<li><mark>A page for admins to view a list of all of the artists in the system, in a concise table that can be filtered by artists tags and sorted by name, email, and a limited set of other fields. </mark></li>\\n				<li><mark>A search functionality that will allow admins to search for artists by name, email and a limited set of other fields.</mark></li>\\n				<li><mark>The ability for admins to tag artwork within an artist’s profile with descriptive words in order to categorize artwork.</mark></li>\\n				<li><mark>The ability to add meta data to an artwork including Title, Retail Price, Wholesale Price, Size, Medium.</mark></li>\\n				<li><mark>The ability to add to an artwork a list of price options for things like different print sizes.</mark></li>\\n				<li><mark>An artwork browsing page where admins can view all of the artwork in the system, filter by artist, artist tag, or artwork tag, and infinitely scroll through all or filtered results when there are too many to load on one page.</mark></li>\\n				<li> <mark class=\\\"kind\\\"> Large view of image </mark></li>\\n				<li><mark class=\\\"kind\\\"> Detail image (secondary image upload on artworks) field and view </mark></li>\\n				<li><mark class=\\\"kind\\\"> Addition of a Help page for artist, creation of copy for this page and a redirect from the login page for artists to this page </mark></li>\\n				<li><mark class=\\\"kind\\\"> Ability for artist to upload their W9 that can be viewed and downloaded by NINE dot ARTS </mark></li>\\n				<li><mark class=\\\"kind\\\">Grid view of all artists that shows their first artwork as a profile image</mark></li>\\n				<li><mark class=\\\"kind\\\">Infinite scroll through artists on all artists page</mark></li>\\n				<li><mark class=\\\"kind\\\">Ability for NINE dot ARTS managers to manage a list of galleries and manage the galleries in the system</mark></li>\\n				<li><mark class=\\\"kind\\\">Ability for an artist to add an associated gallery to their profile</mark></li>\\n				<li><mark class=\\\"kind\\\">A gallery page that links to the artists and artworks tied to that gallery </mark></li>\\n			</ul>\\n			<li><h3>Customer Relationship Management (CRM)</h3></li>\\n			<ul>\\n				<li><mark>A password protected portal where all the information will be kept and only accessible by Nine Dot admins.</mark></li>\\n				<li><mark>The ability to create a company with all pertinent, general information.</mark></li>\\n				<li><mark>The ability to create a contact with all pertinent information such as contact name, email, and a picture.</mark></li>\\n				<li><mark>The ability to associate a contact with a company.</mark></li>\\n				<li><mark>A contact edit page where the contact’s information can be updated.</mark></li>\\n				<li><mark>A contact view page where admins can view the contact’s information along with other features of the contact’s page.</mark></li>\\n				<li><mark>The ability to add notes to a profile to be displayed in either chronological or reverse chronological order, which can be used to keep a log of recent communication between the contact and Nine Dot, or general status updates for the contact.</mark></li>\\n				<li><mark>The ability to tag contacts with descriptive words in order to categorize contacts.</mark></li>\\n				<li><mark>A page to view a list of all contacts in the system, in a concise table that can be filtered by contact tags and sorted by name, email, and a limited set of other fields.</mark></li>\\n				<li><mark>A search functionality that will allow admins to search for contacts by name, email and a limited set of other fields.</mark></li>\\n				<li><mark>The ability to upload files and attach them to a contact. </mark></li>\\n				<li><mark>A simple script that will work through an S3 folder of legacy client folders and attach the included files onto a contact that matches the name of the folder.</mark></li>\\n				<li><mark class=\\\"kind\\\">Addition of user accounts tab on manager dashboard and ability to view all user accounts</mark></li>\\n				<li><mark class=\\\"kind\\\">The ability for NINE dot ARTS managers to invite other manager users</mark></li>\\n				<li><mark class=\\\"kind\\\">The ability for NINE dot ARTS managers to create artists and invite them to the system</mark></li>\\n				<li><mark class=\\\"kind\\\">A place on the dashboard to list all artwork that is marked as to be delivered to NINE dot ARTS</mark></li>\\n				<li><mark class=\\\"kind\\\">Infinite scroll through contacts on all contacts page</mark></li>\\n				<li><mark class=\\\"kind\\\">Infinite scroll through organizations on all organizations page</mark></li>\\n				<li><mark class=\\\"kind\\\">Expansion of address to account for out of country artists</mark></li>\\n			</ul>\\n			<li><h3>Project Management System</h3></li>\\n			<ul>\\n				<li><mark>A password protected portal where all the information will be kept and only accessible by Nine Dot admins.</mark></li>\\n				<li><mark>Nine Dot staff will have a general dashboard where they can view the current state of all projects and recent information or actions on them.</mark></li>\\n				<li><mark>The ability to create a project with all pertinent information such as a project name, due dates, and a description.</mark></li>\\n				<li><mark>The ability to attach an externally created PDF of a contract to the project.</mark></li>\\n				<li><mark>A project edit page where the information for a project can be updated.</mark></li>\\n				<li><mark>A project view page where the project information can be viewed along with the other features of the project’s page. </mark></li>\\n				<li><mark>Within a project page, an artist and contact lookup tool so that artists and contacts can be tied to a project.</mark></li>\\n				<li><mark>An expansion of the Artist Portal and CRM so that on an Artist or Contact profile page, projects can be looked up so that artists and contacts can be added to projects from their profile pages.</mark></li>\\n				<li><mark>An expansion of the Artist Portal’s artwork browsing page so that artwork can be added directly to a project when viewing an individual piece of art.</mark></li>\\n				<li><mark>The ability to quick add artwork from a Project page using the same drag-and-drop tool available on Artist Profiles.</mark></li>\\n				<li><mark>The ability to add notes to a project to be displayed in either chronological or reverse chronological order, which can be used to keep a log of recent activity for a project.</mark></li>\\n				<li>The ability to tag notes on a project to an Artist or Contact so that the project note shows up in the Artist’s or Contact’s notes on their profile page (in progress: LIZ)</li>\\n				<li>An expansion of the Artist Portal and CRM so that notes in artist and contact profiles can be tagged to a particular project so that the notes also show up in the project’s note log. (in progress: LIZ)</li>\\n				<li><mark>The ability to categorize artwork within a project into other project specific categories such as “showing client”, “selected”, etc.</mark></li>\\n				<li>The ability to add project specific framing information (Molding, matte, glass, cost) to artwork.</li>\\n				<li>The ability to display a list of framing information for a project that could then be printed and sent to framers to get price quotes.</li>\\n				<li>The ability to allow clients to login to the system to review the artwork that was selected/passed on, a floor plan for where the artwork will go, and view the total cost for a project. If the client is satisfied the project at this point, they will be able to accept the project as being ready, and invoices as well as PO orders will be automatically created and sent to the appropriate recipients.</li>\\n				<li>The ability to display an invoice of artwork for a client.</li>\\n				<li>The ability to add custom line items to invoices. </li>\\n				<li>The ability to change what artwork pricing display between Retail and Wholesale based on a Client or Project setting.</li>\\n				<li>The ability to create email reminders based both on simple time variables like “two weeks” or triggered by particular actions on a project like a client completing a review.</li>\\n				<li>The ability to create Sales Tax Rules that will be applied when invoices are created. </li>\\n				<li>The ability for an accounting advisor to login and manage Sales Tax Rules as well as be able to access Invoices, POs and Quickbooks exports.</li>\\n				<li>The ability to export simple CSV files of invoices and purchase orders for import into Quickbooks. </li>\\n				<li>The ability to mark art in the Artist Library as purchased and notify the artist via email with a purchase order.</li>\\n				<li>The ability to view general reports on revenue by different categories as well as client volume by types as well.</li>\\n			</ul>\\n		</ul>\\n	</section>\\n	<section>\\n		<h2>Dev Cycles</h2>\\n		<ul>\\n			<li><h3> Artist Portal Beta </h3></li>\\n				<ul>\\n					<li><mark> Response messages for upload failure. Some response if uploads don\'t work. </mark> </li>\\n					<li> Text changes. \\n					<ul>\\n						<li><mark>Dotfolio should appear as \\\"dotfolio™\\\" everywhere</mark></li>\\n						<li>Artist Profile Edit: Change width and height to be height and width</li>\\n						<li> Remove not a Colorado Resident for artist profile </li>\\n						<li><mark> W9 should have a capital W </mark></li>\\n						<li> Artist Profile Edit: Change in verbiage for Retail Price description </li>\\n						<li><mark> Artist Profile Edit: Series to be changed to edition, add description</mark> </li>\\n						<li> Artist Help Page: Verbiage for commission/one-time image licencing </li>\\n						<li> Artist  Help Page: Add description of notifications and what they mean</li>\\n						<li> Artist Help Page: Add overview of the notifications that are on the bottom of the homepage </li>\\n						<li> Help Page/Homepage: Free to use language </li>\\n						<li> Add description of notifications and what the different “states” mean </li>\\n						<li> Artist Profile Edit: \\\"New Website\\\" changed to \\\"Add Website\\\" </li>\\n						<li> Artist Profile Edit: Gallery description and a link to email NINEdot if Gallery isnt\' listed </li>\\n						<li> Artist Profile Edit: University Affiliation description </li>\\n						<li> SIgn in should be sign in </li>\\n						<li> Schools should be Education </li>\\n					</ul>  \\n					<li> <mark>Change the artist statement to a csv/statement upload</mark></li>\\n					<li><mark>Change image size on artwork-gallery show view so there isn\'t a scrollbar on the side:: More importantly be able to see the whole image in the quick view on the screen, so you don\'t have to scroll when arrowing through </mark></li>\\n					<li><mark> Change the way typeahead search works. Will return only matches for the first letter in first name and last name versus any letter in the name match </mark></li>\\n					<li> <mark>On homepage/landing page: shorten the space for the image/video </mark></li>\\n					<li> <mark>Add an email confirmation after signing up </mark></li>	\\n					<li><mark> Add in Education component to artists and ability to search by education </mark></li> \\n					<li> Add landing page icons onto help page </li>\\n					<li> <mark>Add in terms and conditions </mark></li> \\n					<li> <mark>Sideload media so that it appears on Artwork edit page even with poor internet connection </mark></li>\\n					<li> Add a file upload button for adding artworks from a folder (not via drag and drop)</li>\\n					<li> <marK>Add conditional image licencing agreement/contract download similar to W9 (9dot can upload one for the artist taht the artist can sign and upload signed copy)</mark></li>\\n					<li> Artist must have the ability to accept purchase orders </li>\\n					<li> Purchase order and invoice management and notification for artists </li>\\n					<li><mark> Depth and Weight should NOT be required fields </mark></li>\\n					<li><mark> Change the search area on contacts and organizations pages to fixed </mark></li>\\n					<li> <mark>Timestamp for users added is off </mark></li>\\n					<li> <mark>Make cursor appear on email textfield when navigate to login </mark></li> \\n					<li> Set up Production Server fo 9/19 launch </li>\\n				</ul>\\n			<li><h3> Artist Gallery </h3></li>\\n				<ul>\\n					<li> The view needs to query for all artists in the system, not just those that are invited</li>\\n					<li> The artist name should appear on the gallery thumbnail view</li>\\n					<li> The search needs to be broken into first and last name </li>\\n				</ul>\\n			<li><h3> Project Management : Beyond what is speced out above </h3></li>\\n		  <ul>\\n				<li> <h3>Notification System </h3></li>\\n					<ul> \\n						<li>\\n							Get original consignment language from Martha\\n						</li>\\n						<li> Artists Should be notified everytime a work has moced \\\"states\\\" :: NINEdot to provide language \\n							<ul> \\n								<li> Brainstorm </li>\\n								<li> Consignment request </li>\\n								<li> Presentation </li>\\n								<li>  Return </li>\\n								<li> Proposal (1.0, 2.0, 3.0) </li>\\n								<li>  Purchase Order </li>\\n								<li> Invoice received (will this show up for the artists or will this be an internal NDA notification?) </li>\\n								<li> Past invoices with date paid </li>\\n							</ul>\\n						</li>\\n					</ul>\\n				<li><h3>Purchase Orders and Invoicing</h3> </li>\\n					<ul> \\n						<li>\\n							Add section to review their purchase orders (LIZ has started this)\\n						</li>\\n						<li> Artists must “accept” the purchase order -> add text from terms and conditions that says they agree to the size, price and delivery as shown. </li>\\n						<li> Change text to show view of “past invoices” </li>\\n						<li> Show date paid on “past invoices” </li>\\n						<li>  Add link to show sample invoice template (no sticky notes ) </li>\\n					</ul>\\n			</ul>\\n		</ul>\\n	</section>\\n	<section id=\\\"backlog\\\" class=\\\"disabled-list\\\">\\n		<h2>Backlog</h2>\\n		<ul>\\n			<li> Add an important boolean to notes, so if a note is marked as important, there will be a prominent notification to check notes on the artist/project/contact that the note is assigned to </li> \\n			<li> Artwork Tracking System/Artwork Consignment: </li>\\n				<ul>\\n					<li> A way to track where an artwork is that has been requested for delivery (with artist, being delivered, in house, being returned, returned). </li>\\n					<li>  NDA issues delivery request by ______ date *add description of shipping and delivery from terms and conditions page </li>\\n					<li> This system should includea way for NINEdot to request an artwork for delivery on a specific date, the ability for the artist to accept that request (or deny it) and specify the date and time of delivery and the medium of delivery (in person versus by mail) :: Yes, they can deliver in person with a date and time request *confirm text // Yes, they can deliver and will ship the piece in with shipping details *confirm text // No, they cannot deliver the piece *confirm text</li>\\n					<li> The system will allow for the artist to be able to sign a consignment consent form or a waiver that protects NINEdot from damages while the artwork is in their possession. </li>\\n					<li>A view to show what artworks are being delivered, in house or returned. </li>\\n				</ul>  \\n		</ul>\\n	</section>\\n</div>\\n    \");\n      \n    });\n  });//# sourceURL=cirro-backlogs/templates/project/dotfolio.js");

;eval("define(\"cirro-backlogs/templates/project/dyna-reem\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      \n\n\n      data.buffer.push(\"<header>\\n	<h1 class=\\\"text-center\\\">Dyna + Reem</h1>\\n</header>\\n\\n<div class=\\\"container sm\\\">\\n	<section>\\n		<h2>Overview</h2>\\n		<p class=\\\"red\\\">Currently in development.</p>\\n		<a href=\\\"https://dyna-and-reem.myshopify.com\\\" target=\\\"_blank\\\">https://dyna-and-reem.myshopify.com</a>\\n	</section>\\n	<section>\\n		<h2>Development List</h2>\\n		<ul>\\n			<li><mark>Setup GitHub repo.</mark></li>\\n			<li><mark>Setup grunt task to pre-process sass.</mark></li>\\n			<li>Convert current css to sass and organize code.</li>\\n			<li>Build main navigation and style.</li>\\n			<li>Build homepage slider.</li>\\n			<li>Add social media icons to header.</li>\\n			<li>Add homepage javascript.</li>\\n			<li>Add instagram feed to homepage.</li>\\n			<li>Test linking of hompage slider images.</li>\\n			<li>Build Returns page.</li>\\n			<li>Build Contact page.</li>\\n			<li>Setup global fonts.</li>\\n			<li>Style blog roll.</li>\\n			<li>Style blog post page.</li>\\n			<li>Build shop page layout.</li>\\n			<li>Build and style shop page sub-navigation.</li>\\n			<li>Build and style product page slider.</li>\\n			<li>Build social sharing button on product page.</li>\\n			<li>Test adding product to cart.</li>\\n			<li>Build product accordion functionality.</li>\\n			<li>Style cart page.</li>\\n			<li>Style checkout page with seperate css file.</li>\\n		</ul>\\n	</section>\\n</div>\\n\");\n      \n    });\n  });//# sourceURL=cirro-backlogs/templates/project/dyna-reem.js");

;eval("define(\"cirro-backlogs/templates/project/shopify-theme\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      \n\n\n      data.buffer.push(\"<header>\\n	<h1 class=\\\"text-center\\\">Shopify Theme</h1>\\n</header>\\n\\n<div class=\\\"container sm\\\">\\n	<section>\\n		<h2>Overview</h2>\\n		<p class=\\\"red\\\">The next scheduled work day is TBD</p>\\n		<a href=\\\"\\\" target=\\\"_blank\\\">Need a link</a>\\n	</section>\\n	<section>\\n		<h2>Feature List</h2>\\n		<ul>\\n			\\n		</ul>\\n	</section>\\n</div>\\n\");\n      \n    });\n  });//# sourceURL=cirro-backlogs/templates/project/shopify-theme.js");

;eval("define(\"cirro-backlogs/tests/app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - .\');\n    test(\'app.js should pass jshint\', function() { \n      ok(true, \'app.js should pass jshint.\'); \n    });\n  });//# sourceURL=cirro-backlogs/tests/app.jshint.js");

;eval("define(\"cirro-backlogs/tests/cirro-backlogs/tests/helpers/resolver.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - cirro-backlogs/tests/helpers\');\n    test(\'cirro-backlogs/tests/helpers/resolver.js should pass jshint\', function() { \n      ok(true, \'cirro-backlogs/tests/helpers/resolver.js should pass jshint.\'); \n    });\n  });//# sourceURL=cirro-backlogs/tests/cirro-backlogs/tests/helpers/resolver.jshint.js");

;eval("define(\"cirro-backlogs/tests/cirro-backlogs/tests/helpers/start-app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - cirro-backlogs/tests/helpers\');\n    test(\'cirro-backlogs/tests/helpers/start-app.js should pass jshint\', function() { \n      ok(true, \'cirro-backlogs/tests/helpers/start-app.js should pass jshint.\'); \n    });\n  });//# sourceURL=cirro-backlogs/tests/cirro-backlogs/tests/helpers/start-app.jshint.js");

;eval("define(\"cirro-backlogs/tests/cirro-backlogs/tests/test-helper.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - cirro-backlogs/tests\');\n    test(\'cirro-backlogs/tests/test-helper.js should pass jshint\', function() { \n      ok(true, \'cirro-backlogs/tests/test-helper.js should pass jshint.\'); \n    });\n  });//# sourceURL=cirro-backlogs/tests/cirro-backlogs/tests/test-helper.jshint.js");

;eval("define(\"cirro-backlogs/tests/cirro-backlogs/tests/unit/routes/application-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - cirro-backlogs/tests/unit/routes\');\n    test(\'cirro-backlogs/tests/unit/routes/application-test.js should pass jshint\', function() { \n      ok(true, \'cirro-backlogs/tests/unit/routes/application-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=cirro-backlogs/tests/cirro-backlogs/tests/unit/routes/application-test.jshint.js");

;eval("define(\"cirro-backlogs/tests/helpers/resolver\", \n  [\"ember/resolver\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Resolver = __dependency1__[\"default\"];\n\n    var resolver = Resolver.create();\n\n    resolver.namespace = {\n      modulePrefix: \'cirro-backlogs\'\n    };\n\n    __exports__[\"default\"] = resolver;\n  });//# sourceURL=cirro-backlogs/tests/helpers/resolver.js");

;eval("define(\"cirro-backlogs/tests/helpers/start-app\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    /* global require */\n\n    var Application = require(\'cirro-backlogs/app\')[\'default\'];\n    var Router = require(\'cirro-backlogs/router\')[\'default\'];\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = function startApp(attrs) {\n      var App;\n\n      var attributes = Ember.merge({\n        // useful Test defaults\n        rootElement: \'#ember-testing\',\n        LOG_ACTIVE_GENERATION: false,\n        LOG_VIEW_LOOKUPS: false\n      }, attrs); // but you can override;\n\n      Router.reopen({\n        location: \'none\'\n      });\n\n      Ember.run(function() {\n        App = Application.create(attributes);\n        App.setupForTesting();\n        App.injectTestHelpers();\n      });\n\n      App.reset(); // this shouldn\'t be needed, i want to be able to \"start an app at a specific URL\"\n\n      return App;\n    }\n  });//# sourceURL=cirro-backlogs/tests/helpers/start-app.js");

;eval("define(\"cirro-backlogs/tests/router.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - .\');\n    test(\'router.js should pass jshint\', function() { \n      ok(true, \'router.js should pass jshint.\'); \n    });\n  });//# sourceURL=cirro-backlogs/tests/router.jshint.js");

;eval("define(\"cirro-backlogs/tests/routes/application.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes\');\n    test(\'routes/application.js should pass jshint\', function() { \n      ok(true, \'routes/application.js should pass jshint.\'); \n    });\n  });//# sourceURL=cirro-backlogs/tests/routes/application.jshint.js");

;eval("define(\"cirro-backlogs/tests/test-helper\", \n  [\"cirro-backlogs/tests/helpers/resolver\",\"ember-qunit\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var resolver = __dependency1__[\"default\"];\n    var setResolver = __dependency2__.setResolver;\n\n    setResolver(resolver);\n\n    document.write(\'<div id=\"ember-testing-container\"><div id=\"ember-testing\"></div></div>\');\n\n    QUnit.config.urlConfig.push({ id: \'nocontainer\', label: \'Hide container\'});\n    if (QUnit.urlParams.nocontainer) {\n      document.getElementById(\'ember-testing-container\').style.visibility = \'hidden\';\n    } else {\n      document.getElementById(\'ember-testing-container\').style.visibility = \'visible\';\n    }\n  });//# sourceURL=cirro-backlogs/tests/test-helper.js");

;eval("define(\"cirro-backlogs/tests/unit/routes/application-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleFor = __dependency1__.moduleFor;\n\n    moduleFor(\'route:application\', \'ApplicationRoute\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'controller:foo\']\n    });\n\n    test(\'it exists\', function() {\n      var route = this.subject();\n      ok(route);\n    });\n  });//# sourceURL=cirro-backlogs/tests/unit/routes/application-test.js");
